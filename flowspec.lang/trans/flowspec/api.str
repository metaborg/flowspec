module flowspec/api

imports

flowspec/editor-hover
flowspec/utils
flowspec/primitives
flowspec/menus
signatures/flowspec/runtime/-

strategies

flowspec-editor-hover(language-pp) = flowspec--editor-hover(language-pp)

/**
 * Get the property of the control flow graph node associated with
 * the given term. The value returned is the value of the property
 * _before_ the effect of the control flow graph node. 
 *
 * @param a : Analysis
 * @param prop : String
 * @type decl:Term -> Term
 */
flowspec-get-property-pre(|a, propname) = flowspec--get-property-pre(|a, propname)

/**
 * Get the property of the control flow graph node associated with
 * the given term. The value returned is the value of the property
 * _after_ the effect of the control flow graph node. 
 *
 * @param a : Analysis
 * @param prop : String
 * @type decl:Term -> Term
 */
flowspec-get-property-post(|a, propname) = flowspec--get-property-post(|a, propname)

/**
 * Analyze the given AST with NaBL2 and FlowSpec.
 *
 * @param resource:String
 * @type ast:Term -> (ast:Term, Analysis, errors:List(EditorMessage), warnings:List(EditorMessage), notes:List(EditorMessage))
 */
flowspec-analyze-ast(|resource): ast -> (ast', analysis', errors, warnings, notes)
where (ast', analysis, errors, warnings, notes) := <nabl2-analyze-ast(|resource)> ast
    ; analysis' := <flowspec--solve(|analysis)> ast'

strategies // The following are used/extended by generated code

flowspec--prop-names = fail

flowspec--constraint-list-to-cconj(index) = constraint-list-to-cconj(index)

flowspec--cfg-node(|index,kind): n -> CFGNode(index, n, kind)