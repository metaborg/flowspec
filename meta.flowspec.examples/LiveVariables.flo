module flow

cfg Root(s) = entry -> cfg s -> exit

cfg this@Assign(n, e) =
  entry -> cfg e -> this.label -> exit

cfg Skip() = entry -> exit

cfg Seq(s1,s2) = entry -> cfg s1 -> cfg s2 -> exit

cfg IfThenElse(c, t, e) =
  entry -> c.label -> cfg t -> exit, 
           c.label -> cfg e -> exit

cfg While(e, s) =
  entry -> e.label -> cfg s -> e.label -> exit

prop Live = MaySet name

Live this@Ref(n) = Set.plus vars n
for this.label -> successor.label
where vars = Live successor

Live this@Assign(n, e) = Set.minus vars n
for this.label -> successor.label
where vars = Live successor

Live this = vars
for this.label -> successor.label
where vars = Live successor
