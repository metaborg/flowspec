module flow

cfg Root(s) = entry -> cfg s -> exit

cfg this@Assign(n, e) =
  entry -> cfg e -> this -> exit

cfg Skip() = entry -> exit

cfg Seq(s1,s2) = entry -> cfg s1 -> cfg s2 -> exit

cfg IfThenElse(c, t, e) =
  entry -> c -> cfg t -> exit, 
           c -> cfg e -> exit

cfg While(e, s) =
  entry -> e -> cfg s -> e -> exit
  
prop write: Set name
prop read: Set name
prop expr: Option term

write(Assign(x, e)) = {x}

read(Ref(n)) = {n}

expr(this@Add(_,_)) = Some(this)
expr(this@Sub(_,_)) = Some(this)
expr(this@Mul(_,_)) = Some(this)
expr(this@Or(_,_)) = Some(this)
expr(this@Eq(_,_)) = Some(this)
expr(this@Gt(_,_)) = Some(this)
expr(this@Gte(_,_)) = Some(this)
expr(this@Lt(_,_)) = Some(this)
expr(this@Lte(_,_)) = Some(this)

prop veryBusy: MustSet term

veryBusy(Assign(n, rhs) -> next) =
  { e |
    e <- {rhs} \/ (veryBusy next),
    !(n in (read e)),
    !(n in (write e)) }

veryBusy(_ -> next) = veryBusy next