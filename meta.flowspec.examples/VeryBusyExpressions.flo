module flow

cfg Root(s) = entry -> cfg s -> exit

cfg this@Assign(n, e) =
  entry -> cfg e -> this -> exit

cfg Skip() = entry -> exit

cfg Seq(s1,s2) = entry -> cfg s1 -> cfg s2 -> exit

cfg IfThenElse(c, t, e) =
  entry -> c -> cfg t -> exit, 
           c -> cfg e -> exit

cfg While(e, s) =
  entry -> e -> cfg s -> e -> exit
  
prop Write = Set name
prop Read = Set name
prop Expr = Option term

//  Assign(x, e) has Write x.
//
//  Ref(n) has Read n.
//
//  Add(e1, e2), Sub(e1, e2), Mul(e1, e2), Or(e1, e2), And(e1, e2),
//  Eq(e1, e2), Gt(e1, e2), Gte(e1, e2), Lt(e1, e2), Lte(e1, e2) has Expr this.
//
//properties
//
//  VeryBusy:  MustSet(Expr)
//
//property rules
//
//  st has VeryBusy e
//  where st has Expr e.
//
//  st has VeryBusy e
//  where st has successor st2,
//        st2 has VeryBusy e,
//        not (e has Read x, st has Write x).
