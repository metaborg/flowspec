module Flow

imports

  Common
  Property
  Pattern

context-free syntax

  FlowRule.MultiFlowRule = [[{TLPattern ", "}+]: [{FlowExpr ", "}+].] {prefer}
  FlowRule.EmptyRule = [[{TLPattern ", "}+].]
  // MultiFlowRules and EmptyRules get desugared to FlowRules later
  FlowRule.FlowRule = [[TLPattern]: [{FlowExpr ", "}+].]

  FlowExpr.Recurse = ID {avoid}
  FlowExpr.Edge = [[FlowNode] -> [FlowNode]]
  FlowExpr.ConditionalEdge = [[FlowNode] -> [FlowNode] where [{FlowWhereClause ",\n"}+]]
  FlowExpr.Writes = [writes [ID]]
  FlowExpr.Reads = [reads [ID]]
  
  FlowNode.Ref = ID {avoid}
  FlowNode.Entry = [entry]
  FlowNode.Exit = [exit]
  
//  FlowWhereClause.CFGArrow = [[TLPattern] -> [TLPattern]]
  FlowWhereClause.HasProp = [[ID]: [PropName] [Pattern]]
  FlowWhereClause.HasMapProp = [[ID]: [PropName] [Pattern] -> [Pattern]]

template options

  keyword -/- [A-Za-z\-]