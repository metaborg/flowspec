module flowspec/Flow

imports

  flowspec/Common
  flowspec/Property
  flowspec/Pattern

context-free syntax

  FlowRule.MultiFlowRule = [[{TLPattern ", "}+]: [FlowRuleBody].] {prefer}
  FlowRule.EmptyRule = [[{TLPattern ", "}+].]
  // MultiFlowRules and EmptyRules get desugared to FlowRules later
  FlowRule.FlowRule = [[TLPattern]: [FlowRuleBody].]

  FlowRuleBody.Recurse = FlowRef
  FlowRuleBody.SingleEdge = [[FlowRef] has [Successor] [FlowRef]] {prefer}
  FlowRuleBody.Multiple = {FlowExpr ",\n"}+

  FlowRef = ID
  FlowRef = [entry] {reject}
  FlowRef = [exit] {reject}

  FlowExpr.Edge = [[FlowNode] has [Successor] [FlowNode]]
  FlowExpr.ConditionalEdge = [[FlowNode] has [Successor] [FlowNode] where [{FlowWhereClause ",\n"}+]]

  FlowNode.Ref = ID {avoid}
  FlowNode.Entry = [entry]
  FlowNode.Exit = [exit]

// This would probably be too powerful:
//  FlowWhereClause.CFGArrow = [[TLPattern] -> [TLPattern]]
  FlowWhereClause.HasProp = [[ID] has [PropName] [Pattern]]
  FlowWhereClause.HasMapProp = [[ID] has [PropName] [Pattern] -> [Pattern]]

lexical syntax

Successor = "successor"

template options

  keyword -/- [A-Za-z\-]