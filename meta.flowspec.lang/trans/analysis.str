module analysis

imports
  desugar
  
  nabl2/api
  nabl2shared
  nabl2runtime
  
  static-semantics

  pp
  
  libspoofax/stratego/debug

rules // Analysis

  editor-analyze = nabl2-analyze(desugar-all)

  nabl2-debug-constraint-generation-hook = id

  nabl2-debug-analysis-hook = id

rules // Debugging
  
  // Prints the abstract syntax ATerm of a selection.
  debug-show-aterm: (selected, _, _, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"aterm")> path
       ; result   := selected

  // Prints the analyzed annotated abstract syntax ATerm of a selection.
  debug-show-analyzed: (selected, _, _, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"analyzed.aterm")> path
       ; result   := selected

// Custom hooks so we don't need disjunction to check if a type is one of a list of types
signature constructors
  
  ReduceType : Type -> TypeOp // type to check
  SingleRefType : Type

rules

  nabl2-is-op-hook = ?ReduceType(_)

  nabl2-reduce-op-hook(|sol): ReduceType(someType) -> SingleRefType()
    where <single-ref-type> someType
  
  single-ref-type =
      ?Name()
    + ?Origin()
    + ?Term()
    + ?Set(_)
    + ?Map(_, Origin())
    + ?Map(_, Set(Origin()))
      
