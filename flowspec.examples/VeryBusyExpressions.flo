module flow

control-flow rules

root Root(s) = start -> s -> end

Assign(n, e) =
  entry -> e -> this -> exit

Skip() = entry -> exit

Seq(s1, s2) = entry -> s1 -> s2 -> exit

IfThenElse(c, t, e) =
  entry -> node c -> t -> exit,
           node c -> e -> exit

While(e, s) =
  entry -> node e -> s -> node e -> exit

BinOp(_, e1, e2) =
  entry -> e1 -> e2 -> this -> exit

UnOp(_, e) =
  entry -> e -> this -> exit

node Int(_)
node True()
node False()

properties

  veryBusy: MustSet(term)
  external refs: Set(name)

property rules

veryBusy(_.end) = {}

veryBusy(Assign(n, e) -> next) =
  { expr |
    expr <- veryBusy(next),
    !(n in refs(expr)) }
   \/ {e}

veryBusy(_ -> next) = veryBusy(next)