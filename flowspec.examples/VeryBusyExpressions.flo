module flow

cfg Root(s) = entry -> cfg s -> exit

cfg this@Assign(n, e) =
  entry -> cfg e -> this -> exit

cfg Skip() = entry -> exit

cfg Seq(s1,s2) = entry -> cfg s1 -> cfg s2 -> exit

cfg IfThenElse(c, t, e) =
  entry -> c -> cfg t -> exit,
           c -> cfg e -> exit

cfg While(e, s) =
  entry -> e -> cfg s -> e -> exit

external prop reads: Set(name)

prop veryBusy: MustSet(term)

veryBusy(Assign(n, e) -> next) =
  { expr |
    expr <- veryBusy(next),
    !(n in reads(expr)) }
   \/ {e}

veryBusy(_ -> next) = veryBusy(next)